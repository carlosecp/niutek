@tailwind base; @tailwind components; @tailwind utilities; @font-face { font-family: 'Inter'; font-style: normal; font-weight: 100 900; font-display: swap; src: url(/fonts/inter-var-latin.woff2) format('woff2'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; } html { scroll-behavior: smooth; } html, body { width: 100%; height: 100%; } #__next { width: 100%; height: 100%; } .flex-center { @apply flex justify-center items-center; } .form-section { @apply p-4 bg-white rounded-md border; } /* Classes encargadas de determinar el posicionamiento de los contenedores de cada input, independientemente del tipo de esta. Anteriormente teniamos clases que se encargaban directamente de lo responsive. Ahora simplemente utilizamos las queries de Tailwind para determinar nosotros mismos el comportamiento responsive. */ @layer utilities { @variants responsive { .fc-xs { @apply col-span-3; } .fc-sm { @apply col-span-4; } .fc { @apply col-span-6; } .fc-md { @apply col-span-8; } .fc-lg { @apply col-span-12; } } } /* Classes tambien encargas de los estilos de las inputs en si. La mayoria estan aplicadas por defecto en los componentes de cada uno de los tipos de input, pero pueden ser utilizadas de manera modular e independiente. */ @layer utilities { .form-input { @apply p-2 text-sm rounded-md outline-none transition duration-100; } .form-input-border { @apply border border-gray-300 focus:ring-1; } .border-primary { @apply focus:ring-primary focus:border-primary; } .border-error { @apply focus:ring-error focus:border-error; } .form-disabled { @apply disabled:cursor-default; } } .no-scrollbar::-webkit-scrollbar { display: none; } .no-scrollbar { -ms-overfglow-style: none; scrollbar-width: none; } .btn { @apply w-max inline-flex items-center px-4 rounded-md  py-2 border shadow-sm text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition disabled:cursor-default disabled:opacity-50; } .btn-outline-primary { @apply border-primary text-primary hover:text-white hover:border-transparent hover:bg-indigo-700 focus:ring-primary; } .btn-primary { @apply border-transparent text-white bg-indigo-600 hover:bg-indigo-700 focus:ring-primary; } a.anchor { display: block; position: relative; top: -72px; visibility: hidden; } .nav-link { @apply hover:bg-gray-50 hover:text-primary transition duration-100 text-sm text-gray-600  transition-colors duration-100 hover:text-gray-800 border-l-4 border-transparent hover:border-indigo-500; } .break-line { @apply col-start-1 !important; } .alert { @apply rounded border last:mb-4 text-sm p-2 flex items-center shadow-lg; } .alert-success { @apply bg-emerald-200 border-emerald-300 text-emerald-600; } .alert-warning { @apply bg-red-200 border-red-300 text-red-500; } .alert-enter { opacity: 0; } .alert-enter-active { opacity: 1; transition: opacity 500ms ease-in-out; } .alert-exit { opacity: 1; } .alert-exit-active { opacity: 0; transition: opacity 500ms ease-in-out; }
